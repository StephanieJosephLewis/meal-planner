import React, { useState } from 'react';

const GroceryList = ({ groceryList }) => {
  const [checkedItems, setCheckedItems] = useState(new Set());

  const handleItemCheck = (itemKey) => {
    const newCheckedItems = new Set(checkedItems);
    if (newCheckedItems.has(itemKey)) {
      newCheckedItems.delete(itemKey);
    } else {
      newCheckedItems.add(itemKey);
    }
    setCheckedItems(newCheckedItems);
  };

  const formatQuantity = (quantity, unit) => {
    // Format decimal quantities nicely
    const rounded = Math.round(quantity * 100) / 100;
    if (rounded === Math.floor(rounded)) {
      return `${Math.floor(rounded)} ${unit}`;
    }
    return `${rounded} ${unit}`;
  };

  const categoryDisplayNames = {
    'produce': 'ü•ï Produce',
    'meat': 'ü•© Meat & Poultry',
    'fish': 'üêü Fish & Seafood',
    'dairy': 'üßÄ Dairy',
    'pantry': 'üè† Pantry',
    'frozen': '‚ùÑÔ∏è Frozen',
    'deli': 'üçñ Deli',
    'other': 'üì¶ Other'
  };

  const categoryOrder = ['produce', 'meat', 'fish', 'dairy', 'deli', 'frozen', 'pantry', 'other'];

  const printGroceryList = () => {
    const printWindow = window.open('', '_blank');
    const printContent = `
      <!DOCTYPE html>
      <html>
        <head>
          <title>Grocery List</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 20px; }
            h1 { color: #333; border-bottom: 2px solid #333; padding-bottom: 10px; }
            h2 { color: #666; margin-top: 30px; margin-bottom: 10px; }
            ul { list-style-type: none; padding-left: 0; }
            li { margin: 8px 0; padding: 5px; border: 1px solid #ddd; }
            .category { background-color: #f5f5f5; }
            .item { background-color: white; margin-left: 20px; }
          </style>
        </head>
        <body>
          <h1>Weekly Grocery List</h1>
          ${categoryOrder.filter(cat => groceryList[cat] && groceryList[cat].length > 0).map(category => `
            <h2>${categoryDisplayNames[category] || category}</h2>
            <ul>
              ${groceryList[category].map(item => `
                <li class="item">‚òê ${formatQuantity(item.quantity, item.unit)} ${item.name}</li>
              `).join('')}
            </ul>
          `).join('')}
          <br><br>
          <p><em>Generated by Family Meal Planner</em></p>
        </body>
      </html>
    `;
    printWindow.document.write(printContent);
    printWindow.document.close();
    printWindow.print();
  };

  const totalItems = Object.values(groceryList).reduce((total, items) => total + items.length, 0);
  const checkedCount = checkedItems.size;

  if (totalItems === 0) {
    return (
      <div className="text-center py-12">
        <div className="text-gray-400 text-xl mb-4">üìù</div>
        <p className="text-gray-600">Generate a meal plan first to see your grocery list.</p>
      </div>
    );
  }

  return (
    <div className="max-w-4xl mx-auto">
      {/* Header */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <div className="flex items-center justify-between mb-4">
          <div>
            <h2 className="text-2xl font-bold text-gray-800">Grocery List</h2>
            <p className="text-gray-600">
              {checkedCount} of {totalItems} items completed
            </p>
          </div>
          <button
            onClick={printGroceryList}
            className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
          >
            Print List
          </button>
        </div>
        
        {/* Progress Bar */}
        <div className="w-full bg-gray-200 rounded-full h-2">
          <div
            className="bg-green-600 h-2 rounded-full transition-all duration-300"
            style={{ width: `${totalItems > 0 ? (checkedCount / totalItems) * 100 : 0}%` }}
          ></div>
        </div>
      </div>

      {/* Grocery Categories */}
      <div className="space-y-6">
        {categoryOrder.filter(category => groceryList[category] && groceryList[category].length > 0).map(category => (
          <div key={category} className="bg-white rounded-lg shadow-md overflow-hidden">
            <div className="bg-gray-50 px-6 py-3 border-b border-gray-200">
              <h3 className="text-lg font-semibold text-gray-800">
                {categoryDisplayNames[category] || category}
              </h3>
            </div>
            <div className="p-6">
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">
                {groceryList[category].map((item, index) => {
                  const itemKey = `${category}-${item.name}-${index}`;
                  const isChecked = checkedItems.has(itemKey);
                  
                  return (
                    <div
                      key={itemKey}
                      className={`flex items-center p-3 rounded-lg border-2 transition-all duration-200 cursor-pointer ${
                        isChecked
                          ? 'bg-green-50 border-green-200 text-green-800'
                          : 'bg-gray-50 border-gray-200 hover:border-gray-300'
                      }`}
                      onClick={() => handleItemCheck(itemKey)}
                    >
                      <div className={`mr-3 text-xl ${isChecked ? 'text-green-600' : 'text-gray-400'}`}>
                        {isChecked ? '‚úÖ' : '‚òê'}
                      </div>
                      <div className={isChecked ? 'line-through' : ''}>
                        <div className="font-medium capitalize">
                          {formatQuantity(item.quantity, item.unit)} {item.name}
                        </div>
                      </div>
                    </div>
                  );
                })}
              </div>
            </div>
          </div>
        ))}
      </div>

      {/* Summary */}
      {checkedCount === totalItems && totalItems > 0 && (
        <div className="text-center mt-8 p-6 bg-green-50 rounded-lg border-2 border-green-200">
          <div className="text-green-600 text-2xl mb-2">üéâ</div>
          <h3 className="text-lg font-semibold text-green-800">Shopping Complete!</h3>
          <p className="text-green-700">You've checked off all items on your grocery list.</p>
        </div>
      )}
    </div>
  );
};

export default GroceryList;